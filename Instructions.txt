> The main testing program is:

‘run_this.py’

where you can test our saved trees with your data.(you just need to modify the file path)
There will be some ‘minimal’ tree visualization as well ^ ^.

————————————————————————————————————————————
> The 10-th fold cross_validation script is:

‘crossval1.py’

which contains the 10-th fold cross validation, confusion matrix

————————————————————————————————————————————
> The tree visualizing scripts is:

‘dTree.py’

There will be plotting in the console(tree visualizing), as well as an ‘output_dot_formatted.txt’ file (this is to another way to better visualize the tree).

There will be quite a lot of information printed in the console, so please scroll there and have a look ^ ^.
————————————————————————————————————————————

The ‘output_dot_formatted.txt’ file is used for webGraphviz plotting purposes, in order to see the plot, please:
1. Go to http://www.webgraphviz.com
2. Copy the dot strings for one tree (separated by ======= in the output file)
3. Paste the strings directly in the text field on the page and click ‘Generate Graph’
   (Make sure the string falls into the ‘digraph G { here goes the str }’)

Note that we choose this since we don’t want to introduce the offline plotting Graphviz python module which is not a built in lib, it may not be compatible with a random machine. We can do offline plotting directly in code using Graphviz lib with a few lines of code as long as we have already parsed the ‘dot’ style strings.
